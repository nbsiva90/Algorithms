class Solution {

    public int maxAreaOfIsland(int[][] grid) {
          int maxArea = 0;
        
       int gridRowL = grid.length;
        int gridColL = grid[0].length;
        if(gridRowL==0 ||gridColL == 0 ){return 0;}
        for(int i = 0; i<gridRowL; ++i){
            for(int j=0; j<gridColL;++j){
                maxArea = Math.max(maxArea, dfs(grid, i,j));
            }
            
        }
         return maxArea;
       
    }
    
    private int dfs(int[][] grid, int i, int j){
        if(i< 0 || i >= grid.length || j< 0 || j>=grid[0].length || grid[i][j]!=1  ){
            return 0; 
        } 
        
        int localMax = 1;
        grid[i][j] =2 ;
        localMax += dfs(grid,i-1,j);
        localMax +=dfs(grid,i+1,j);
        localMax += dfs(grid,i,j-1);
        localMax += dfs(grid,i,j+1);
        return localMax;
    }
}


