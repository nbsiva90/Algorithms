/*Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Example 1:

Input: pattern = "abba", str = "dog cat cat dog"
Output: true
Example 2:

Input:pattern = "abba", str = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", str = "dog cat cat dog"
Output: false
Example 4:

Input: pattern = "abba", str = "dog dog dog dog"
Output: false
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters that may be separated by a single space.*/
class Solution {
    public boolean wordPattern(String pattern, String str) {
        Map<Character,String> patternMap = new HashMap<Character,String>();
        char[] patternArray = pattern.toCharArray();
        String arr[] = str.split(" ");
        if(patternArray.length!=arr.length){
            return false;
        }else{
            for(int i = 0; i< arr.length; i++ ){
                if(!patternMap.containsKey(patternArray[i])){
                    if(patternMap.containsValue(arr[i])) return false;
                    patternMap.put(patternArray[i],arr[i]);
                    
                    continue;
                }
                if( !arr[i].equals(patternMap.get(patternArray[i]))) return false;
            }
        }
        
        return true;
    }
}
