/* Maximum Product Subarray

Solution
Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.*/

class Solution {
    public int maxProduct(int[] nums) {
        int max = nums[0];
        int numsL = nums.length;
        for(int i=0; i<numsL;i++){
            int current = i+1;
            int product = nums[i];
            max = Math.max(max,product);
            while(current<numsL && product !=0){
                product = product*nums[current++];
                max = Math.max(max,product);   
            }
        }
     return max;
    }
}
