/*
Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Note:
You may assume that both strings contain only lowercase letters.

canConstruct("a", "b") -> false
canConstruct("aa", "ab") -> false
canConstruct("aa", "aab") -> true 

*/

class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
      /*  Map<Character, Integer> magazineCharMap = new HashMap<Character, Integer>();
        System.out.println(ransomNote + "----" + magazine +  "====" + magazine.indexOf(ransomNote));
       for (int i = 0; i < magazine.length(); i++) {
			System.out.print(magazine.charAt(i));
           Character currChar = magazine.charAt(i);
            if(magazineCharMap.containsKey(currChar)){
                System.out.println("Already found character in magazine. increase count");
                Integer currCount = magazineCharMap.get(currChar);
                magazineCharMap.put(currChar, ++currCount);
            }else{
                magazineCharMap.put(currChar, 0);
            }
            
		}
        for (int i = 0; i < ransomNote.length(); i++) {
            Character currChar = ransomNote.charAt(i);
            if(magazineCharMap.containsKey(currChar)){
                Integer currCount = magazineCharMap.get(currChar);
                if(currCount==0){
                    magazineCharMap.remove(currChar);
                }else{
                    magazineCharMap.put(currChar, --currCount);
                }
                
                
            }else{
                return false;
            }
        }
        
        return true;*/
          for (int i = 0; i < ransomNote.length(); i++) {
               Character currChar = ransomNote.charAt(i);
              if(magazine.indexOf(currChar)>-1){
                  int idx = magazine.indexOf(currChar);
                  magazine = magazine.substring(0, idx) + magazine.substring(idx + 1);
              }else{
                  return false;
              }
          }
        return true;
        
        
    }
}
